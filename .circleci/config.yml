# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1


commands:
  print_details:
    description: Prints the parameter provided
    parameters:
      _name:
        type: string
        description: Name of Job based on what it https://circleci.com/docs/2.0/configuration-reference

    steps:
      - run:
          name: DetailsParams
          command: echo FROM PRINT_DETAILS << parameters._name>>
      
       
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  starter:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "verify"
          command: "echo We are verifying! <<pipeline.id>> "

  filePersistance:
    docker:
      - image: cimg/base:stable

    steps:

      - run:
          name: Current Dir
          command: pwd
          
      - run:
          name: "Write to file"
          command: echo "Hello Nehemie in file" > output.txt

      - print_details:
          _name: Nehemie

      - print_details:
          _name: ${CIRCLE_WORKFLOW_ID} ${CIRCLE_WORKFLOW_JOB_ID} 
          
      - persist_to_workspace:
          root: .
          paths:
            - .

  fileRead:
    docker:
      - image: cimg/base:stable

    steps:
      - attach_workspace:
          at: .
      
      - run:
          name: "Print File"
          command: cat output.txt

      - run:
          name: "Cause Error"
          command: return 1

      # We run this when there was an exit status of zero from other commands
      - run:
          name: Upload Failed Tests
          command: curl --data fail_tests.log http://example.com/error_logs
          when: on_fail

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  starter-workflow:
    jobs:
      - starter
      - filePersistance
      - fileRead:
          requires:
            - "filePersistance"
        
